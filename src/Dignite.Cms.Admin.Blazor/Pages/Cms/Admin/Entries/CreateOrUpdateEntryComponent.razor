@using Dignite.Abp.DynamicForms.Components;
@using Dignite.Cms.Admin.Entries;
@using Dignite.Cms.Admin.Sections;
@using Dignite.Cms.Localization;
@using Volo.Abp.BlazoriseUI.Components.ObjectExtending
@using Volo.Abp.Localization;
@inject IEntryAdminAppService AppService
@inject ISectionAdminAppService SectionAppService
@inject IFormComponentSelector FormComponentSelector
@inject ILanguageProvider LanguageProvider
@inject AbpBlazorMessageLocalizerHelper<CmsResource> LH
@inherits AbpComponentBase

<Row>
    <Column ColumnSize="ColumnSize.Is8">
        <Card Background="@Background.White">
            <CardBody>
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <FieldLabel>@L["Title"]</FieldLabel>
                        <TextEdit @bind-Text="@Entry.Title">
                            <Feedback>
                                <Blazorise.ValidationError/>
                            </Feedback>
                        </TextEdit>
                    </Field>
                </Validation>
                @if (CurrentEntryType != null)
                {
                    <!------------- Custom Fields ------------------------------------->
                    @foreach (var tab in CurrentEntryType.FieldTabs)
                    {
                        foreach (var ef in tab.Fields)
                        {
                            if (ef.Field != null)
                            {
                                var component = FormComponentSelector.Get(ef.Field.FormName);
                                var parameters = new Dictionary<string, object>();
                                parameters.Add("CustomizableObject", Entry);
                                parameters.Add("Field", ef.Field);
                                <DynamicComponent Type="@component.GetType()" Parameters="@parameters"></DynamicComponent>                                    
                            }
                        }
                    }   
                }
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">
        <Validation MessageLocalizer="@LH.Localize">
            <Field>
                <Blazorise.FieldLabel>@L["Slug"]</Blazorise.FieldLabel>
                <Blazorise.TextEdit @bind-Text="@Entry.Slug">
                    <Feedback>
                        <Blazorise.ValidationError />
                    </Feedback>
                </Blazorise.TextEdit>
            </Field>
        </Validation>

        @if (Section.EntryTypes.Count > 1)
        {
            <Validation MessageLocalizer="@LH.Localize" Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel>@L["EntryType"]</FieldLabel>
                    <Select TValue="Guid" SelectedValue="@Entry.EntryTypeId" SelectedValueChanged="@OnEntryTypeSelectedValueChanged">
                        @foreach (var item in Section.EntryTypes)
                        {
                            <SelectItem Value="@item.Id">@item.DisplayName</SelectItem>
                        }
                    </Select>
                </Field>
            </Validation>
        }
        <Validation MessageLocalizer="@LH.Localize" Validator="@ValidationRule.None">
            <Field>
                <Blazorise.FieldLabel>@L["Region"]</Blazorise.FieldLabel>
                <Select TValue="string" SelectedValue="Entry.Region" SelectedValueChanged="@OnRegionSelectedValueChanged">
                    @foreach (var item in Section.Site.Regions)
                    {
                        <SelectItem Value="@item.Region">@AllRegions.FirstOrDefault(l=>l.CultureName==item.Region)?.DisplayName</SelectItem>
                    }
                </Select>
            </Field>
        </Validation>
        @if (AllEntriesOfStructure!=null)
        {
            var newEntry = (CreateEntryInput)Entry;
            <Validation MessageLocalizer="@LH.Localize" Validator="@ValidationRule.None">
                <Field>
                    <FieldLabel>@L["ParentEntry"]</FieldLabel>
                    <Select TValue="Guid?" @bind-SelectedValue="@newEntry.ParentId">
                        @foreach (var item in AllEntriesOfStructure)
                        {
                            <SelectItem Value="@item.Id">@item.Title</SelectItem>
                        }
                    </Select>
                </Field>
            </Validation>            
        }
        <Validation MessageLocalizer="@LH.Localize">
            <Field>
                <FieldLabel>@L["PublishTime"]</FieldLabel>
                <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@Entry.PublishTime">                    
                    <Feedback>
                        <Blazorise.ValidationError/>
                    </Feedback>
                </DateEdit>
            </Field>
        </Validation>
        <Validation MessageLocalizer="@LH.Localize">
            <Field>
                <FieldLabel>@L["RevisionNotes"]</FieldLabel>
                <MemoEdit @bind-Text="@Entry.RevisionNotes" AutoSize>
                    <Feedback>
                        <ValidationError />
                    </Feedback>
                </MemoEdit>
            </Field>
        </Validation>
    </Column>
</Row>
