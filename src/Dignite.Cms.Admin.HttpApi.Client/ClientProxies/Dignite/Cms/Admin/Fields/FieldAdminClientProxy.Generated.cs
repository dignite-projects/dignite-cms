// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using Dignite.Cms.Admin.DynamicForms;
using System;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client.ClientProxying;

// ReSharper disable once CheckNamespace
namespace Dignite.Cms.Admin.Fields;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IFieldAdminAppService), typeof(FieldAdminClientProxy))]
public partial class FieldAdminClientProxy : ClientProxyBase<IFieldAdminAppService>, IFieldAdminAppService
{
    public virtual async Task<FieldDto> CreateAsync(CreateFieldInput input)
    {
        return await RequestAsync<FieldDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(CreateFieldInput), input }
        });
    }

    public virtual async Task<FieldDto> UpdateAsync(Guid id, UpdateFieldInput input)
    {
        return await RequestAsync<FieldDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(UpdateFieldInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<FieldDto>> GetListAsync(GetFieldsInput input)
    {
        return await RequestAsync<PagedResultDto<FieldDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetFieldsInput), input }
        });
    }

    public virtual async Task<FieldDto> GetAsync(Guid id)
    {
        return await RequestAsync<FieldDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public Task<FieldDto> FindByNameAsync(string name)
    {
        throw new NotImplementedException();
    }
}
