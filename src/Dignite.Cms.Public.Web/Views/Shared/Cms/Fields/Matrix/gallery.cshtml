@using Dignite.Abp.DynamicForms.Select;
@using Dignite.Cms.Public.Web.Models;
@using Dignite.Abp.DynamicForms;
@using Dignite.FileExplorer.Files;
@model MatrixBlockViewModel
@{
    var layoutField = Model.Type.FieldDefinitions.First(fd => fd.Name == "layout");
    var layoutConfiguration = new SelectConfiguration(layoutField.FormConfiguration);
    var layouts = Model.Block.GetField<IEnumerable<string>>("layout");
    var photos = Model.Block.GetField<List<FileDescriptorDto>>("photos");
}

@if (layouts != null && layouts.Any())
{
    var layout = layouts.First();
    switch (layout)
    {
        case "tile":
            foreach (var photo in photos)
            {
                <div class="text-center my-md-5">
                    <img src="@photo.Url" class="img-fluid" alt="@photo.Name">
                </div>
            }
            break;
        case "two-columns-per-row":
            <div class="row row-cols-1 row-cols-md-2 g-5">
                @foreach(var photo in photos)
                {
                    <div class="col text-center align-self-center my-md-5">
                        <img src="@photo.Url" class="img-fluid" alt="@photo.Name">
                    </div>
                }
            </div>
            break;
        case "three-columns-per-row":
            <div class="row row-cols-1 row-cols-md-3 g-5">
                @foreach (var photo in photos)
                {
                    <div class="col text-center align-self-center my-md-5">
                        <img src="@photo.Url" class="img-fluid" alt="@photo.Name">
                    </div>
                }
            </div>
            break;
        case "four-columns-per-row":
            <div class="row row-cols-1  row-cols-sm-2 row-cols-md-4 g-5">
                @foreach (var photo in photos)
                {
                    <div class="col text-center align-self-center my-md-5">
                        <img src="@photo.Url" class="img-fluid" alt="@photo.Name">
                    </div>
                }
            </div>
            break;
        case "scroll":
            var carouseId = Guid.NewGuid().ToString();
            <div id="@carouseId" class="carousel slide">
                <div class="carousel-inner">
                    @foreach (var photo in photos)
                    {
                        var index = photos.IndexOf(photo);
                        <div class="carousel-item @(index==0?"active":"")">
                            <img src="@photo.Url" class="d-block w-100" alt="@photo.Name">
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#@carouseId" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#@carouseId" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
            break;
    }
}