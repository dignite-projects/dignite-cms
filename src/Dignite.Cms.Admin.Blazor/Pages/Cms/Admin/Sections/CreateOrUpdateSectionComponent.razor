@using Dignite.Cms.Admin.Sections
@using Dignite.Cms.Localization
@using Dignite.Cms.Sections;
@using Volo.Abp.BlazoriseUI.Components.ObjectExtending
@using Volo.Abp.Localization;
@inject AbpBlazorMessageLocalizerHelper<CmsResource> LH
@inherits AbpComponentBase

<Validation MessageLocalizer="@LH.Localize">
    <Field>
        <FieldLabel>@L["DisplayName"]</FieldLabel>
        <TextEdit @bind-Text="Entity.DisplayName" Autofocus="true">
            <Feedback>
                <ValidationError />
            </Feedback>
        </TextEdit>
    </Field>
</Validation>
<Validation MessageLocalizer="@LH.Localize">
    <Field>
        <FieldLabel>@L["Name"]</FieldLabel>
        <TextEdit @bind-Text="Entity.Name">
            <Feedback>
                <ValidationError />
            </Feedback>
        </TextEdit>
    </Field>
</Validation>
<Validation MessageLocalizer="@LH.Localize">
    <Field>
        <FieldLabel>@L["SectionType"]</FieldLabel>
        <RadioGroup TValue="SectionType" Name="SectionType" @bind-CheckedValue="Entity.Type">
            @foreach(var item in SectionTypes)
            {
            <Radio TValue="SectionType" Value="@item">@L[item.ToLocalizationKey()]</Radio>
            }
        </RadioGroup>
    </Field>
</Validation>
<Validation MessageLocalizer="@LH.Localize">
    <Field>
        <FieldLabel>@L["Route"]</FieldLabel>
        <TextEdit @bind-Text="Entity.EntryPage.Route">
            <Feedback>
                <ValidationError />
            </Feedback>
        </TextEdit>
    </Field>
</Validation>
<Validation MessageLocalizer="@LH.Localize">
    <Field>
        <FieldLabel>@L["Template"]</FieldLabel>
        <TextEdit @bind-Text="Entity.EntryPage.Template">
            <Feedback>
                <ValidationError />
            </Feedback>
        </TextEdit>
    </Field>
</Validation>
<Field>
    <Check TValue="bool" @bind-Checked="Entity.IsDefault">@L["IsDefault"]</Check>
</Field>
<Field>
    <Check TValue="bool" @bind-Checked="Entity.IsActive">@L["IsActive"]</Check>
</Field>


@code {
    [Parameter] public CreateOrUpdateSectionInputBase Entity { get; set; }
    protected IReadOnlyList<SectionType> SectionTypes { get; set; }

    public CreateOrUpdateSectionComponent()
    {
        LocalizationResource = typeof(CmsResource);
        SectionTypes = Enum.GetValues(typeof(SectionType))
                            .Cast<SectionType>()
                            .ToList();
    }
}