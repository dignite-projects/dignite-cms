// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using Dignite.Cms.Admin.Sites;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace Dignite.Cms.Admin.Sites;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(ISiteAdminAppService), typeof(SiteAdminClientProxy))]
public partial class SiteAdminClientProxy : ClientProxyBase<ISiteAdminAppService>, ISiteAdminAppService
{
    public virtual async Task<SiteDto> GetAsync(Guid id)
    {
        return await RequestAsync<SiteDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<SiteDto>> GetListAsync(GetSitesInput input)
    {
        return await RequestAsync<PagedResultDto<SiteDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetSitesInput), input }
        });
    }

    public virtual async Task<SiteDto> CreateAsync(CreateSiteInput input)
    {
        return await RequestAsync<SiteDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(CreateSiteInput), input }
        });
    }

    public virtual async Task<SiteDto> UpdateAsync(Guid id, UpdateSiteInput input)
    {
        return await RequestAsync<SiteDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(UpdateSiteInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }
}
