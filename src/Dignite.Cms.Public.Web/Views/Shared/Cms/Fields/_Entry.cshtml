@using Dignite.Abp.Data
@using Dignite.Cms.Public.Sections
@using Dignite.Cms.Public.Web.Models;
@using Dignite.Abp.DynamicForms;
@using Dignite.Cms.Public.Entries;
@inject IEntryPublicAppService EntryPublicAppService
@inject ISectionPublicAppService SectionPublicAppService
@model EntryFieldViewModel
@{
    var entryIds = Model.Entry.GetField<List<Guid>>(Model.Field.Name);
    SectionDto section = null;
    IReadOnlyList<EntryDto> entries = null;
    if (entryIds != null && entryIds.Any())
    {
        var firstEntry = await EntryPublicAppService.GetAsync(entryIds[0]);
        section = await SectionPublicAppService.GetAsync(firstEntry.SectionId);
        if (entryIds.Count > 1)
        {
            entries = (await EntryPublicAppService.GetListAsync(
                new GetEntriesInput
                        {
                            SectionId = ((EntryDto)Model.Entry).SectionId,
                            EntryIds = entryIds
                        }
            )).Items;
        }
        else
        {
            entries = new List<EntryDto>
            {
            firstEntry
            };
        }
    }
}
@if (entries != null && entries.Any())
{
    @if (entries.Count>1)
    {
        <ul class="list-inline">
            @foreach (var item in entries)
            {
                <li class="list-inline-item">
                    <a entry="@item" section="section">@item.Title</a>
                </li>
            }
        </ul>
    }
    else
    {
        <a entry="@entries[0]" section="section">
            @entries[0].Title
        </a>
    }
}